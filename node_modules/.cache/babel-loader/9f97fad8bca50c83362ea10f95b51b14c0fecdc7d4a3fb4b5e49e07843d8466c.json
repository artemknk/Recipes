{"ast":null,"code":"var _s = $RefreshSig$();\nimport styles from './App.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getRecipesChunk } from '../../Redux/Recipes/chunk';\nimport { useEffect } from 'react';\nimport RecipeCard from '../../UI/RecipeCard/RecipeCard';\nfunction App() {\n  _s();\n  const recipes = useSelector(state => state.recipe.recipes);\n  const dispatch = useDispatch();\n  console.log(recipes);\n  useEffect(() => {\n    dispatch(getRecipesChunk());\n  }, []);\n}\n_s(App, \"tujpi2GUB2w9NEj88eFJNygBhMw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["styles","useSelector","useDispatch","getRecipesChunk","useEffect","RecipeCard","App","_s","recipes","state","recipe","dispatch","console","log","_c","$RefreshReg$"],"sources":["/Users/artemknk/Documents/GitHub/hexlet-git/React App/src/Components/App/App.jsx"],"sourcesContent":["import styles from './App.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getRecipesChunk } from '../../Redux/Recipes/chunk';\nimport { useEffect } from 'react';\nimport RecipeCard from '../../UI/RecipeCard/RecipeCard';\n\nfunction App() {\n  const recipes = useSelector((state) => state.recipe.recipes);\n  const dispatch = useDispatch();\n\n  console.log(recipes);\n  useEffect(() => {\n    dispatch(getRecipesChunk());\n  }, []);\n  \n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,kBAAkB;AACrC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,eAAe,QAAQ,2BAA2B;AAC3D,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,UAAU,MAAM,gCAAgC;AAEvD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,OAAO,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACF,OAAO,CAAC;EAC5D,MAAMG,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BU,OAAO,CAACC,GAAG,CAACL,OAAO,CAAC;EACpBJ,SAAS,CAAC,MAAM;IACdO,QAAQ,CAACR,eAAe,CAAC,CAAC,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;AAER;AAACI,EAAA,CATQD,GAAG;EAAA,QACML,WAAW,EACVC,WAAW;AAAA;AAAAY,EAAA,GAFrBR,GAAG;AAWZ,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
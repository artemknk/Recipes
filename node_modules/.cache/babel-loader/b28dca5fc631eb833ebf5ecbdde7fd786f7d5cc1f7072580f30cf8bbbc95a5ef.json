{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { loginBuilder } from \"./chunk\";\nexport const initialState = {\n  user: null,\n  error: null,\n  loading: false\n};\nexport const userSlice = createSlice({\n  name: \"user\",\n  accessToken: null,\n  initialState,\n  reducers: {},\n  selectors: {\n    getUserState: state => state.user,\n    getUserLoadingState: state => state.loading\n  },\n  extraReducers: loginBuilder\n});\nexport default userSlice.reducer;\nexport const {\n  getUserState,\n  getUserLoadingState\n} = userSlice.selectors;","map":{"version":3,"names":["createSlice","loginBuilder","initialState","user","error","loading","userSlice","name","accessToken","reducers","selectors","getUserState","state","getUserLoadingState","extraReducers","reducer"],"sources":["/Users/artemknk/Documents/GitHub/hexlet-git/React App/src/Redux/User/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { loginBuilder } from \"./chunk\";\n\nexport const initialState = {\n  user: null,\n  error: null,\n  loading: false,\n}\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  accessToken: null,\n  initialState,\n  reducers: {},\n  selectors: {\n    getUserState: (state) => state.user,\n    getUserLoadingState: (state) => state.loading\n  },\n  extraReducers: loginBuilder\n})\n\nexport default userSlice.reducer\nexport const { getUserState, getUserLoadingState } = userSlice.selectors"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,QAAQ,SAAS;AAEtC,OAAO,MAAMC,YAAY,GAAG;EAC1BC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGN,WAAW,CAAC;EACnCO,IAAI,EAAE,MAAM;EACZC,WAAW,EAAE,IAAI;EACjBN,YAAY;EACZO,QAAQ,EAAE,CAAC,CAAC;EACZC,SAAS,EAAE;IACTC,YAAY,EAAGC,KAAK,IAAKA,KAAK,CAACT,IAAI;IACnCU,mBAAmB,EAAGD,KAAK,IAAKA,KAAK,CAACP;EACxC,CAAC;EACDS,aAAa,EAAEb;AACjB,CAAC,CAAC;AAEF,eAAeK,SAAS,CAACS,OAAO;AAChC,OAAO,MAAM;EAAEJ,YAAY;EAAEE;AAAoB,CAAC,GAAGP,SAAS,CAACI,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
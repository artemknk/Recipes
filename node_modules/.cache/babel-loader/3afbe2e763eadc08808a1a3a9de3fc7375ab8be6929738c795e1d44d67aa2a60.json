{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { api } from \"../../Api\";\nexport const loginUserChunk = createAsyncThunk(\"login/LoginUser\", data => api.loginUser(data));\nexport const getLoggedUserChunk = createAsyncThunk(\"login/getLoggedUser\", () => api.getLoggedUser());\nexport const loginBuilder = builder => {\n  builder.addCase(loginUserChunk.pending, state => {\n    state.loading = true;\n    state.error = null;\n  }).addCase(loginUserChunk.fulfilled, (state, action) => {\n    state.user = action.payload;\n    state.loading = false;\n  }).addCase(loginUserChunk.rejected, (state, action) => {\n    state.error = action.error.message;\n    state.loading = false;\n  }).addCase(getLoggedUserChunk.pending, state => {\n    state.loading = true;\n    state.error = null;\n  }).addCase(getLoggedUserChunk.fulfilled, (state, action) => {\n    state.user = action.payload;\n    state.loading = false;\n  }).addCase(getLoggedUserChunk.rejected, (state, action) => {\n    state.error = action.error.message;\n    state.loading = false;\n  });\n};","map":{"version":3,"names":["createAsyncThunk","api","loginUserChunk","data","loginUser","getLoggedUserChunk","getLoggedUser","loginBuilder","builder","addCase","pending","state","loading","error","fulfilled","action","user","payload","rejected","message"],"sources":["/Users/artemknk/Documents/GitHub/hexlet-git/React App/src/Redux/User/chunk.js"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { api } from \"../../Api\";\n\n\nexport const loginUserChunk = createAsyncThunk(\n  \"login/LoginUser\",\n  (data) => api.loginUser(data)\n)\n\nexport const getLoggedUserChunk = createAsyncThunk(\n  \"login/getLoggedUser\",\n  () => api.getLoggedUser()\n)\n\nexport const loginBuilder = (builder) => {\n  builder.addCase(loginUserChunk.pending, (state) => {\n    state.loading = true;\n    state.error = null;\n  }).addCase(loginUserChunk.fulfilled, (state, action) => {\n    state.user = action.payload;\n    state.loading = false;\n  }).addCase(loginUserChunk.rejected, (state, action) => {\n    state.error = action.error.message;\n    state.loading = false;\n  }).addCase(getLoggedUserChunk.pending, (state) => {\n    state.loading = true;\n    state.error = null;\n  }).addCase(getLoggedUserChunk.fulfilled, (state, action) => {\n    state.user = action.payload;\n    state.loading = false;\n  }).addCase(getLoggedUserChunk.rejected, (state, action) => {\n    state.error = action.error.message;\n    state.loading = false;\n  })\n}"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,GAAG,QAAQ,WAAW;AAG/B,OAAO,MAAMC,cAAc,GAAGF,gBAAgB,CAC5C,iBAAiB,EAChBG,IAAI,IAAKF,GAAG,CAACG,SAAS,CAACD,IAAI,CAC9B,CAAC;AAED,OAAO,MAAME,kBAAkB,GAAGL,gBAAgB,CAChD,qBAAqB,EACrB,MAAMC,GAAG,CAACK,aAAa,CAAC,CAC1B,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,OAAO,IAAK;EACvCA,OAAO,CAACC,OAAO,CAACP,cAAc,CAACQ,OAAO,EAAGC,KAAK,IAAK;IACjDA,KAAK,CAACC,OAAO,GAAG,IAAI;IACpBD,KAAK,CAACE,KAAK,GAAG,IAAI;EACpB,CAAC,CAAC,CAACJ,OAAO,CAACP,cAAc,CAACY,SAAS,EAAE,CAACH,KAAK,EAAEI,MAAM,KAAK;IACtDJ,KAAK,CAACK,IAAI,GAAGD,MAAM,CAACE,OAAO;IAC3BN,KAAK,CAACC,OAAO,GAAG,KAAK;EACvB,CAAC,CAAC,CAACH,OAAO,CAACP,cAAc,CAACgB,QAAQ,EAAE,CAACP,KAAK,EAAEI,MAAM,KAAK;IACrDJ,KAAK,CAACE,KAAK,GAAGE,MAAM,CAACF,KAAK,CAACM,OAAO;IAClCR,KAAK,CAACC,OAAO,GAAG,KAAK;EACvB,CAAC,CAAC,CAACH,OAAO,CAACJ,kBAAkB,CAACK,OAAO,EAAGC,KAAK,IAAK;IAChDA,KAAK,CAACC,OAAO,GAAG,IAAI;IACpBD,KAAK,CAACE,KAAK,GAAG,IAAI;EACpB,CAAC,CAAC,CAACJ,OAAO,CAACJ,kBAAkB,CAACS,SAAS,EAAE,CAACH,KAAK,EAAEI,MAAM,KAAK;IAC1DJ,KAAK,CAACK,IAAI,GAAGD,MAAM,CAACE,OAAO;IAC3BN,KAAK,CAACC,OAAO,GAAG,KAAK;EACvB,CAAC,CAAC,CAACH,OAAO,CAACJ,kBAAkB,CAACa,QAAQ,EAAE,CAACP,KAAK,EAAEI,MAAM,KAAK;IACzDJ,KAAK,CAACE,KAAK,GAAGE,MAAM,CAACF,KAAK,CAACM,OAAO;IAClCR,KAAK,CAACC,OAAO,GAAG,KAAK;EACvB,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}